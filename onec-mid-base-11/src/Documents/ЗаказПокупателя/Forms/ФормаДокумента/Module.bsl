
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// {{ Войтех Ю.В.: Добавление группы и реквизита  на форму документа
	
	Группа = Элементы.Добавить("ГруппаШапка", Тип("ГруппаФормы"), Элементы.ГруппаШапкаЛево);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Заголовок = "Добавленные реквизиты объекта:";
	
    ПолеВвода = Элементы.Добавить("ЭлементСогласованнаяСкидка", Тип("ПолеФормы"), Группа);
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	ПолеВвода.ПутьКДанным = "Объект.СогласованнаяСкидка"; 
	ПолеВвода.УстановитьДействие("ПриИзменении", "ПриИзмененииСогласованнаяСкидка");
	//}}	
	
	
	//{{ Войтех Ю.В.: Добавление кнопки на форму(Команда пересчитывающей строки таблицы с учетом скидки)

	
	 Команда = Команды.Добавить("ПересчитатьСтрокиТаблицы");
	 Команда.Заголовок = "ПересчитатьСтрокиТаблицы";
	 Команда.Действие = "КомандаПересчитатьСтрокиТаблицы";
	 
	 КнопкаФормы = Элементы.Добавить("КнопкаПересчитатьСтрокиТаблицы", Тип("КнопкаФормы"), Элементы.ГруппаШапкаЛево);
	 КнопкаФормы.ИмяКоманды = "ПересчитатьСтрокиТаблицы";
	 КнопкаФормы.Вид = ВидКнопкиФормы.ОбычнаяКнопка;
	
	 //}}
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

 &НаКлиенте
 Процедура  КомандаПересчитатьСтрокиТаблицы(Команда)
	 
	 //{{ Войтех Ю.В.: Добавление команды пересчитывающей строки таблицы с учетом скидки
	 
	 ПересчитатьСтроки()
	 
	 //}}
 КонецПроцедуры
 
 &НаКлиенте
 Процедура ПриИзмененииСогласованнаяСкидка(Элемент)
	 
	 //{{ Войтех Ю.В.: Добавление команды выводящей вопрос
	 
	 // Код события:
	 
	 Если Объект.Товары.Количество() > 0 ИЛИ Объект.Услуги.Количество() > 0 Тогда
		 
		 ЗадатьВопросОПересчете(Элемент);
		 
	 КонецЕсли; 
	 
	 //}} 
	 
КонецПроцедуры	 
	 
      &НаКлиенте
	  Асинх Процедура ЗадатьВопросОПересчете(Элемент)
		  
	// {{ ВойтехЮ.В.: Команда выводящая вопрос   
		
	
	Вопрос = ВопросАсинх("Изменен процент скидки. Пересчитать таблицу товаров и услуг?", РежимДиалогаВопрос.ДаНет); 
	
	ОтветНаВопрос = Ждать Вопрос;
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда  
		
		ПересчитатьСтроки();
		
	КонецЕсли;
	
	 //}} 
	 
КонецПроцедуры  

&НаКлиенте
Процедура ПересчитатьСтроки()
	
	//{{ Войтех Ю.В.:Добавление команды для пересчета строки 
		
	Для Каждого Строка Из Объект.Товары Цикл
		РассчитатьСуммуСтроки(Строка);
	КонецЦикла;
	
	Для Каждого Строка Из Объект.Услуги Цикл
		РассчитатьСуммуСтроки(Строка); 
		//}}
		
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	//{{ Войтех Ю.В.: Расчет суммы с учетом скидки 
	
	//Исходный код:
	
	//ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;
	
	//Новый код: 
	
	 	
	 ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * (100 - Объект.СогласованнаяСкидка) / 100; 
	 	// }} 
	
	РассчитатьСуммуДокумента();
	
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
